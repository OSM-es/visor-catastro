version: '3.8'
services:
  postgres:
    container_name: postgres
    restart: always
    image: postgis/postgis:15-3.3
    env_file:
    - .env.local
    environment:
      - CATASTRO_DATA=${CATASTRO_DATA}
    volumes:
      - ${CATASTRO_DATA}/postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  updater:
    container_name: updater
    restart: always
    depends_on: 
      - uploader
    build:
      context: ./updater
    env_file:
    - .env.local
    volumes:
      - ${CATASTRO_DATA}/update:/catastro
    command: ["python3", "-u", "/app/update.py"]
    labels:
      traefik.enable: "false"

  uploader:
    container_name: uploader
    restart: always
    depends_on: 
      - postgres
    build:
      context: ./backend
    ports:
      - 5002:5002
    volumes:
      - ${CATASTRO_DATA}:/data

  backend:
    container_name: backend
    restart: always
    depends_on: 
      - postgres
    build:
      context: ./backend
    ports:
      - 5001:5001
    volumes:
      - ${CATASTRO_DATA}:/data
    labels:
      - traefik.http.routers.backend.rule=PathPrefix(`/api/`)
      - traefik.http.services.backend.loadbalancer.server.port=5001

  frontend:
    container_name: frontend
    profiles:
      - prod
    depends_on:
      - backend
    restart: always
    build: ./frontend
    ports:
      - 5000:80
    labels:
      - traefik.http.routers.frontend.rule=PathPrefix(`/`)
      - traefik.http.services.frontend.loadbalancer.server.port=80

  dozzle:
    container_name: dozzle
    image: amir20/dozzle:v4.10.4
    environment:
      - DOZZLE_BASE=/logs
    env_file:
      - .env.local
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 9999:8080
    labels:
      - traefik.http.routers.dozzle.rule=PathPrefix(`/logs`)
      - traefik.http.services.dozzle.loadbalancer.server.port=8080


  traefik:
    container_name: traefik
    image: traefik:v3.0
    restart: always
    ports:
      - 80:80
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command:
      - --entrypoints.web.address=:80
      - --providers.docker=true
